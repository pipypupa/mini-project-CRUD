async function e(){try{let e=await fetch("https://6884da50745306380a399f75.mockapi.io/posts/");if(!e.ok)throw Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(e){return console.error("Помилка при отриманні постів:",e),[]}}async function t(e){try{return await fetch("https://6884da50745306380a399f75.mockapi.io/posts/",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json; charset=UTF-8"}}).then(e=>e.json())}catch(e){console.log(e)}}async function o(e,t){try{let o=await fetch(`https://6884da50745306380a399f75.mockapi.io/posts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!o.ok)throw Error("Failed to update post");return await o.json()}catch(e){throw console.error("Failed to update post:",e),e}}async function s(e){try{return await fetch(`https://6884da50745306380a399f75.mockapi.io/posts/${e}`,{method:"DELETE"})}catch(e){console.log(e)}}async function n(e,t){try{return await fetch(`https://6884da50745306380a399f75.mockapi.io/posts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({likes:e})}).then(e=>e.json())}catch(e){console.log(e)}}async function c(e,t,o){try{return await fetch(`https://6884da50745306380a399f75.mockapi.io/posts/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({comments:o,commentList:e})}).then(e=>e.json())}catch(e){console.log(e)}}let a=[],r=null,i=null;async function l(){let t=await e();t.forEach(e=>{Array.isArray(e.commentList)||(e.commentList=[])}),document.querySelector(".posts").innerHTML=t.map(e=>`
    <li class="post-card" data-id="${e.id}">
    <img class="photo-post" src="${e.imageUrl}" alt="photo" />
        <p class="user">${e.userName}</p>
        <div class="stats">
            <p id="like" class="stats-item">
                <button class="like-button"><i class="material-icons">thumb_up</i></button>
                <span class="likes-p">${e.likes}</span>
            </p>
            <p id="comment" class="stats-item">
                <button class="comment-button"><i class="material-icons">comment</i></button>
                <span class="commments-count">${e.comments}</span>
            </p>
        </div>
        <button type="click" class="edit">Edit</button>
        <button type="click" class="delete">Delete</button>
    </li>
    `).join(""),a=t}l(),document.querySelector(".add").addEventListener("click",()=>{document.querySelector(".modal-backdrop").classList.remove("hidden")}),document.querySelector(".close-modal").addEventListener("click",()=>{document.querySelector(".modal-backdrop").classList.add("hidden")}),document.querySelector("#new-post-form").addEventListener("submit",async e=>{e.preventDefault();let o=e.target.elements.url.value,s=e.target.elements.Username.value;await t({userName:s,imageUrl:o,likes:0,comments:0,commentList:[]}),await l(),document.querySelector(".modal-backdrop").classList.add("hidden"),e.target.reset()}),document.querySelector(".close-comment-button").addEventListener("click",()=>{document.querySelector(".modal-backdropCommments").classList.add("hidden")}),document.querySelector(".close-modalEdit").addEventListener("click",()=>{document.querySelector(".modal-backdropEdit").classList.add("hidden")}),document.querySelector(".posts").addEventListener("click",e=>{let t=e.target.closest(".post-card");if(!t)return;let o=t.dataset.id;if(e.target.closest(".like-button")){let s=e.target.closest(".like-button"),c=t.querySelector(".likes-p"),a=Number(c.textContent);if(s.classList.contains("liked"))return;c.textContent=a+=1,s.classList.add("liked"),n(a,o)}if(e.target.closest(".comment-button")){r=o,document.querySelector(".modal-backdropCommments").classList.remove("hidden");let e=a.find(e=>e.id===r),t=Array.isArray(e.commentList)?e.commentList:[];document.querySelector(".comments").innerHTML=Array.isArray(t)?t.map(e=>`
            <li data-comment="This is a comment to delete" class="comment-card">
                <div class="div-comment"><p class="comment-info">${e}</p></div>
                <button class="delete-comment">Delete</button>
            </li>
        `).join(""):(console.warn("renderComments expected an array, but got:",t),"<li class='comment-card'>No comments yet.</li>")}e.target.closest(".delete")&&s(o).then(()=>l()),e.target.closest(".edit")&&(i=o,document.querySelector("#username").value=t.querySelector(".user").textContent,document.querySelector("#edit-url").value=t.querySelector(".photo-post").src,document.querySelector(".modal-backdropEdit").classList.remove("hidden"))}),document.querySelector(".edit-button").addEventListener("click",async e=>{e.preventDefault();let t={userName:document.querySelector("#username").value,imageUrl:document.querySelector("#edit-url").value};try{await o(t,i),await l(),document.querySelector(".modal-backdropEdit").classList.add("hidden")}catch(e){console.error("Error updating post:",e)}}),document.querySelector('#search-form input[name="query"]').addEventListener("input",e=>{let t=e.target.value.toLowerCase();document.querySelectorAll(".post-card").forEach(e=>{let o=e.querySelector(".user").textContent.toLowerCase();e.style.display=o.includes(t)?"block":"none"})}),document.querySelector("#comments-post-form").addEventListener("submit",async e=>{e.preventDefault();let t=document.querySelector("#info").value.trim();if(!t)return;let o=a.find(e=>e.id===r);if(!o)return;let s=Array.isArray(o.commentList)?[...o.commentList,t]:[t],n=s.length;await c(s,r,n),await l(),document.querySelector(".modal-backdropCommments").classList.add("hidden"),document.querySelector("#info").value=""}),document.querySelector(".comments").addEventListener("click",e=>{if(e.target.closest(".delete-comment")){let t=e.target.closest("li.comment-card").querySelector(".comment-info").textContent.trim(),o=a.find(e=>e.id===r);if(!o)return;let s=o.commentList.filter(e=>e!==t),n=s.length;c(s,r,n).then(()=>l()),document.querySelector(".modal-backdropCommments").classList.add("hidden")}});
//# sourceMappingURL=mini-project-CRUD.4dd319c0.js.map
